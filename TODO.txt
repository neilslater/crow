TODO:

Crow follow ups:

  * Specs - How to do test at all?
    * expression_spec.rb - basic
    * typemap_spec.rb - done
    * struct_class_spec.rb - done
    * libdef_spec.rb - started

  * Templates for spec files of target system

  * bool vars - add <stdbool.h>

  * Varied initialisation for init sequences of pointers (in clone)

  * Template pointers as read/write from Ruby (requires associated shape)

  * Automated support for Marshal

  * Allow writable NArrays?

  * Allow NArrays as input and use them for initialisers

  * Allow other structs as input and unwrap them

  * Add ruby class initialisers to their .h files (so classes can init other classes)

  * Support changes to structs/classes without breaking added code (also adding new structs...)

  * Allow short struct pointer names

  * Allow non-allocated pointers

  * enum variable type

  * Public attribute names != struct attribute names

  * Validating init params (use temp vars to unpack and test)

  * Validating/casting NArray inputs on Ruby class level

  * Support for Marshal serialise via hash

  * Taking named hash params for Ruby init

  * More pre-built utilities:
    * Sorting, shuffling, random numbers
    *
